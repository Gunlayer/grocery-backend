{
  "swagger": "2.0",
  "info": {
    "description": "Grocery Shop REST APIs Documentation",
    "version": "1.0.0",
    "title": "Grocery Shop",
    "termsOfService": "www.hello.com",
    "contact": {
      "name": "Mister XYZ",
      "url": "www.hello.com",
      "email": "mrXYZ@gmail.com"
    },
    "license": {
      "name": "License API",
      "url": "www.hello.com"
    }
  },
  "host": "localhost:8080",
  "basePath": "/api",
  "tags": [
    {
      "name": "authentication-rest-controller",
      "description": "Authentication Rest Controller"
    },
    {
      "name": "cart-controller",
      "description": "Cart Controller"
    },
    {
      "name": "checkout-controller",
      "description": "Checkout Controller"
    },
    {
      "name": "product-controller",
      "description": "Product Controller"
    },
    {
      "name": "registration-rest-controller",
      "description": "Registration Rest Controller"
    },
    {
      "name": "review-controller",
      "description": "Review Controller"
    },
    {
      "name": "user-controller",
      "description": "User Controller"
    }
  ],
  "paths": {
    "/admin/users": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "fetches all the users",
        "operationId": "getAllUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "paged",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "sort.sorted",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "sort.unsorted",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "unpaged",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Page«UserInformationDto»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "user-controller"
        ],
        "summary": "introduces new user",
        "operationId": "addUserUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserInformationDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserInformationDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "user-controller"
        ],
        "summary": "modifies an existing user",
        "operationId": "editUserUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserInformationDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserInformationDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "user-controller"
        ],
        "summary": "deletes an existing user by email",
        "operationId": "deleteUserUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "userEmail",
            "description": "userEmail",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserInformationDto"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/admin/users/{userEmail}": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "gets a user by email",
        "operationId": "getUserByEmailUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "userEmail",
            "in": "path",
            "description": "userEmail",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserInformationDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "authentication-rest-controller"
        ],
        "summary": "authenticates user's request to log in the system",
        "operationId": "authenticateUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserRequestDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuthenticationResponseDTO"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "authentication-rest-controller"
        ],
        "summary": "signs out the user",
        "operationId": "logoutUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/cart": {
      "get": {
        "tags": [
          "cart-controller"
        ],
        "summary": "fetches cart for specific user",
        "operationId": "getUserCartUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "headers",
            "in": "header",
            "description": "headers",
            "required": true,
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ItemResponseDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "cart-controller"
        ],
        "summary": "introduces new item",
        "operationId": "addItemToCartUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "requestDTO",
            "description": "requestDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ItemToAddDeleteRequestDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string",
              "enum": [
                "100 CONTINUE",
                "101 SWITCHING_PROTOCOLS",
                "102 PROCESSING",
                "103 CHECKPOINT",
                "200 OK",
                "201 CREATED",
                "202 ACCEPTED",
                "203 NON_AUTHORITATIVE_INFORMATION",
                "204 NO_CONTENT",
                "205 RESET_CONTENT",
                "206 PARTIAL_CONTENT",
                "207 MULTI_STATUS",
                "208 ALREADY_REPORTED",
                "226 IM_USED",
                "300 MULTIPLE_CHOICES",
                "301 MOVED_PERMANENTLY",
                "302 FOUND",
                "302 MOVED_TEMPORARILY",
                "303 SEE_OTHER",
                "304 NOT_MODIFIED",
                "305 USE_PROXY",
                "307 TEMPORARY_REDIRECT",
                "308 PERMANENT_REDIRECT",
                "400 BAD_REQUEST",
                "401 UNAUTHORIZED",
                "402 PAYMENT_REQUIRED",
                "403 FORBIDDEN",
                "404 NOT_FOUND",
                "405 METHOD_NOT_ALLOWED",
                "406 NOT_ACCEPTABLE",
                "407 PROXY_AUTHENTICATION_REQUIRED",
                "408 REQUEST_TIMEOUT",
                "409 CONFLICT",
                "410 GONE",
                "411 LENGTH_REQUIRED",
                "412 PRECONDITION_FAILED",
                "413 PAYLOAD_TOO_LARGE",
                "413 REQUEST_ENTITY_TOO_LARGE",
                "414 URI_TOO_LONG",
                "414 REQUEST_URI_TOO_LONG",
                "415 UNSUPPORTED_MEDIA_TYPE",
                "416 REQUESTED_RANGE_NOT_SATISFIABLE",
                "417 EXPECTATION_FAILED",
                "418 I_AM_A_TEAPOT",
                "419 INSUFFICIENT_SPACE_ON_RESOURCE",
                "420 METHOD_FAILURE",
                "421 DESTINATION_LOCKED",
                "422 UNPROCESSABLE_ENTITY",
                "423 LOCKED",
                "424 FAILED_DEPENDENCY",
                "425 TOO_EARLY",
                "426 UPGRADE_REQUIRED",
                "428 PRECONDITION_REQUIRED",
                "429 TOO_MANY_REQUESTS",
                "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
                "451 UNAVAILABLE_FOR_LEGAL_REASONS",
                "500 INTERNAL_SERVER_ERROR",
                "501 NOT_IMPLEMENTED",
                "502 BAD_GATEWAY",
                "503 SERVICE_UNAVAILABLE",
                "504 GATEWAY_TIMEOUT",
                "505 HTTP_VERSION_NOT_SUPPORTED",
                "506 VARIANT_ALSO_NEGOTIATES",
                "507 INSUFFICIENT_STORAGE",
                "508 LOOP_DETECTED",
                "509 BANDWIDTH_LIMIT_EXCEEDED",
                "510 NOT_EXTENDED",
                "511 NETWORK_AUTHENTICATION_REQUIRED"
              ]
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "cart-controller"
        ],
        "summary": "delete item",
        "operationId": "deleteItemUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "item",
            "description": "item",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ItemToAddDeleteRequestDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string",
              "enum": [
                "100 CONTINUE",
                "101 SWITCHING_PROTOCOLS",
                "102 PROCESSING",
                "103 CHECKPOINT",
                "200 OK",
                "201 CREATED",
                "202 ACCEPTED",
                "203 NON_AUTHORITATIVE_INFORMATION",
                "204 NO_CONTENT",
                "205 RESET_CONTENT",
                "206 PARTIAL_CONTENT",
                "207 MULTI_STATUS",
                "208 ALREADY_REPORTED",
                "226 IM_USED",
                "300 MULTIPLE_CHOICES",
                "301 MOVED_PERMANENTLY",
                "302 FOUND",
                "302 MOVED_TEMPORARILY",
                "303 SEE_OTHER",
                "304 NOT_MODIFIED",
                "305 USE_PROXY",
                "307 TEMPORARY_REDIRECT",
                "308 PERMANENT_REDIRECT",
                "400 BAD_REQUEST",
                "401 UNAUTHORIZED",
                "402 PAYMENT_REQUIRED",
                "403 FORBIDDEN",
                "404 NOT_FOUND",
                "405 METHOD_NOT_ALLOWED",
                "406 NOT_ACCEPTABLE",
                "407 PROXY_AUTHENTICATION_REQUIRED",
                "408 REQUEST_TIMEOUT",
                "409 CONFLICT",
                "410 GONE",
                "411 LENGTH_REQUIRED",
                "412 PRECONDITION_FAILED",
                "413 PAYLOAD_TOO_LARGE",
                "413 REQUEST_ENTITY_TOO_LARGE",
                "414 URI_TOO_LONG",
                "414 REQUEST_URI_TOO_LONG",
                "415 UNSUPPORTED_MEDIA_TYPE",
                "416 REQUESTED_RANGE_NOT_SATISFIABLE",
                "417 EXPECTATION_FAILED",
                "418 I_AM_A_TEAPOT",
                "419 INSUFFICIENT_SPACE_ON_RESOURCE",
                "420 METHOD_FAILURE",
                "421 DESTINATION_LOCKED",
                "422 UNPROCESSABLE_ENTITY",
                "423 LOCKED",
                "424 FAILED_DEPENDENCY",
                "425 TOO_EARLY",
                "426 UPGRADE_REQUIRED",
                "428 PRECONDITION_REQUIRED",
                "429 TOO_MANY_REQUESTS",
                "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
                "451 UNAVAILABLE_FOR_LEGAL_REASONS",
                "500 INTERNAL_SERVER_ERROR",
                "501 NOT_IMPLEMENTED",
                "502 BAD_GATEWAY",
                "503 SERVICE_UNAVAILABLE",
                "504 GATEWAY_TIMEOUT",
                "505 HTTP_VERSION_NOT_SUPPORTED",
                "506 VARIANT_ALSO_NEGOTIATES",
                "507 INSUFFICIENT_STORAGE",
                "508 LOOP_DETECTED",
                "509 BANDWIDTH_LIMIT_EXCEEDED",
                "510 NOT_EXTENDED",
                "511 NETWORK_AUTHENTICATION_REQUIRED"
              ]
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/checkout": {
      "post": {
        "tags": [
          "checkout-controller"
        ],
        "summary": "finishes order checkout",
        "description": " Also removes cart items",
        "operationId": "saveAddressAtCheckoutUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "headers",
            "in": "header",
            "description": "headers",
            "required": true,
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          {
            "in": "body",
            "name": "requestDTO",
            "description": "requestDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckoutRequestDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string",
              "enum": [
                "100 CONTINUE",
                "101 SWITCHING_PROTOCOLS",
                "102 PROCESSING",
                "103 CHECKPOINT",
                "200 OK",
                "201 CREATED",
                "202 ACCEPTED",
                "203 NON_AUTHORITATIVE_INFORMATION",
                "204 NO_CONTENT",
                "205 RESET_CONTENT",
                "206 PARTIAL_CONTENT",
                "207 MULTI_STATUS",
                "208 ALREADY_REPORTED",
                "226 IM_USED",
                "300 MULTIPLE_CHOICES",
                "301 MOVED_PERMANENTLY",
                "302 FOUND",
                "302 MOVED_TEMPORARILY",
                "303 SEE_OTHER",
                "304 NOT_MODIFIED",
                "305 USE_PROXY",
                "307 TEMPORARY_REDIRECT",
                "308 PERMANENT_REDIRECT",
                "400 BAD_REQUEST",
                "401 UNAUTHORIZED",
                "402 PAYMENT_REQUIRED",
                "403 FORBIDDEN",
                "404 NOT_FOUND",
                "405 METHOD_NOT_ALLOWED",
                "406 NOT_ACCEPTABLE",
                "407 PROXY_AUTHENTICATION_REQUIRED",
                "408 REQUEST_TIMEOUT",
                "409 CONFLICT",
                "410 GONE",
                "411 LENGTH_REQUIRED",
                "412 PRECONDITION_FAILED",
                "413 PAYLOAD_TOO_LARGE",
                "413 REQUEST_ENTITY_TOO_LARGE",
                "414 URI_TOO_LONG",
                "414 REQUEST_URI_TOO_LONG",
                "415 UNSUPPORTED_MEDIA_TYPE",
                "416 REQUESTED_RANGE_NOT_SATISFIABLE",
                "417 EXPECTATION_FAILED",
                "418 I_AM_A_TEAPOT",
                "419 INSUFFICIENT_SPACE_ON_RESOURCE",
                "420 METHOD_FAILURE",
                "421 DESTINATION_LOCKED",
                "422 UNPROCESSABLE_ENTITY",
                "423 LOCKED",
                "424 FAILED_DEPENDENCY",
                "425 TOO_EARLY",
                "426 UPGRADE_REQUIRED",
                "428 PRECONDITION_REQUIRED",
                "429 TOO_MANY_REQUESTS",
                "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
                "451 UNAVAILABLE_FOR_LEGAL_REASONS",
                "500 INTERNAL_SERVER_ERROR",
                "501 NOT_IMPLEMENTED",
                "502 BAD_GATEWAY",
                "503 SERVICE_UNAVAILABLE",
                "504 GATEWAY_TIMEOUT",
                "505 HTTP_VERSION_NOT_SUPPORTED",
                "506 VARIANT_ALSO_NEGOTIATES",
                "507 INSUFFICIENT_STORAGE",
                "508 LOOP_DETECTED",
                "509 BANDWIDTH_LIMIT_EXCEEDED",
                "510 NOT_EXTENDED",
                "511 NETWORK_AUTHENTICATION_REQUIRED"
              ]
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/products": {
      "get": {
        "tags": [
          "product-controller"
        ],
        "summary": "fetches all the products",
        "operationId": "getAllProductsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "paged",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "sort.sorted",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "sort.unsorted",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "unpaged",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Page«ProductNoDescDTO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "product-controller"
        ],
        "summary": "introduces new product",
        "operationId": "addProductUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "product",
            "description": "product",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProductWithDescDTO"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/products/mostpopular": {
      "get": {
        "tags": [
          "product-controller"
        ],
        "summary": "fetches certain number (15 by default) of mostly viewed products",
        "operationId": "getMostPopularUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "number",
            "in": "query",
            "description": "number",
            "required": false,
            "type": "integer",
            "default": 15,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductNoDescDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/products/{id}": {
      "get": {
        "tags": [
          "product-controller"
        ],
        "summary": "gets a product by ID",
        "operationId": "getProductByIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProductWithReviewsDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/products/{id}/add_review": {
      "post": {
        "tags": [
          "product-controller"
        ],
        "summary": "adds a review from an authorized user for a product with specific id",
        "operationId": "addReviewUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "headers",
            "in": "header",
            "description": "headers",
            "required": true,
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "review",
            "description": "review",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Review"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReviewDTO"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/registration": {
      "post": {
        "tags": [
          "registration-rest-controller"
        ],
        "summary": "processes user's request to perform registration into the system",
        "operationId": "registerUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "requestDTO",
            "description": "requestDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserRequestDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RegistrationResponseDTO"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/reviews": {
      "get": {
        "tags": [
          "review-controller"
        ],
        "summary": "fetches all existing reviews",
        "operationId": "getAllReviewsUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReviewDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/reviews/{id}": {
      "get": {
        "tags": [
          "review-controller"
        ],
        "summary": "fetches all existing reviews for certain product (by product id)",
        "operationId": "getAllReviewsByProductIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReviewForProductDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    }
  },
  "definitions": {
    "Address": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "addressEmail": {
          "type": "string"
        },
        "apartment": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "userEmail": {
          "type": "string"
        }
      },
      "title": "Address"
    },
    "AddressDTO": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "description": "User's address"
        },
        "apartment": {
          "type": "string",
          "description": "User's apartment"
        },
        "email": {
          "type": "string",
          "description": "User's email"
        },
        "firstName": {
          "type": "string",
          "description": "User's first name"
        },
        "lastName": {
          "type": "string",
          "description": "User's last name"
        }
      },
      "title": "AddressDTO"
    },
    "AuthenticationResponseDTO": {
      "type": "object",
      "properties": {
        "address": {
          "description": "User's saved address",
          "$ref": "#/definitions/AddressDTO"
        },
        "cartItems": {
          "type": "array",
          "description": "User's cart",
          "items": {
            "$ref": "#/definitions/ItemResponseDTO"
          }
        },
        "email": {
          "type": "string",
          "description": "User's email"
        },
        "token": {
          "type": "string",
          "description": "User's auth token"
        }
      },
      "title": "AuthenticationResponseDTO"
    },
    "CheckoutRequestDTO": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "description": "User's address"
        },
        "apartment": {
          "type": "string",
          "description": "User's apartment"
        },
        "email": {
          "type": "string",
          "description": "Email of user, who is checking out"
        },
        "firstName": {
          "type": "string",
          "description": "First name of user, who is checking out"
        },
        "lastName": {
          "type": "string",
          "description": "Last name of user, who is checking out"
        },
        "needToSave": {
          "type": "boolean",
          "description": "Checks if address shall be linked to user"
        },
        "orderList": {
          "type": "array",
          "description": "Order's product list",
          "items": {
            "$ref": "#/definitions/ProductForOrderContentDTO"
          }
        },
        "totalPrice": {
          "type": "number",
          "format": "double",
          "description": "Order's total price"
        }
      },
      "title": "CheckoutRequestDTO"
    },
    "ItemRequestDTO": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "integer",
          "format": "int64",
          "example": 1,
          "description": "Product's unique id"
        },
        "quantity": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "Item's quantity"
        },
        "size": {
          "type": "integer",
          "format": "int32",
          "example": 5,
          "description": "Item's size"
        }
      },
      "title": "ItemRequestDTO"
    },
    "ItemResponseDTO": {
      "type": "object",
      "properties": {
        "image": {
          "type": "string",
          "example": "https://www.mantralabsglobal.com/404",
          "description": "Url to an image"
        },
        "name": {
          "type": "string",
          "example": "Eggs",
          "description": "Product's name"
        },
        "price": {
          "type": "number",
          "format": "double",
          "example": 200.0,
          "description": "Product's price"
        },
        "productId": {
          "type": "integer",
          "format": "int64",
          "example": 1,
          "description": "Product's unique id"
        },
        "quantity": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "Item's quantity"
        },
        "size": {
          "type": "integer",
          "format": "int32",
          "example": 5,
          "description": "Item's size"
        },
        "sizeType": {
          "type": "string",
          "example": "PACKS",
          "description": "Product type",
          "enum": [
            "PACKS",
            "KILOS"
          ]
        }
      },
      "title": "ItemResponseDTO"
    },
    "ItemToAddDeleteRequestDTO": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "integer",
          "format": "int64",
          "example": 1,
          "description": "Product's unique id"
        },
        "quantity": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "Item's quantity"
        },
        "size": {
          "type": "integer",
          "format": "int32",
          "example": 5,
          "description": "Item's size"
        },
        "userEmail": {
          "type": "string",
          "example": "user@gmail.com",
          "description": "User's email"
        }
      },
      "title": "ItemToAddDeleteRequestDTO"
    },
    "Order": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "orderContent": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderContent"
          }
        },
        "orderDate": {
          "type": "string",
          "format": "date"
        },
        "price": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "Order"
    },
    "OrderContent": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "order": {
          "$ref": "#/definitions/Order"
        },
        "product": {
          "$ref": "#/definitions/Product"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "OrderContent"
    },
    "Pageable": {
      "type": "object",
      "properties": {
        "offset": {
          "type": "integer",
          "format": "int64"
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "paged": {
          "type": "boolean"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "unpaged": {
          "type": "boolean"
        }
      },
      "title": "Pageable"
    },
    "Page«ProductNoDescDTO»": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductNoDescDTO"
          }
        },
        "empty": {
          "type": "boolean"
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "pageable": {
          "$ref": "#/definitions/Pageable"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Page«ProductNoDescDTO»"
    },
    "Page«UserInformationDto»": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserInformationDto"
          }
        },
        "empty": {
          "type": "boolean"
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "pageable": {
          "$ref": "#/definitions/Pageable"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Page«UserInformationDto»"
    },
    "Product": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "image": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "orderContent": {
          "$ref": "#/definitions/OrderContent"
        },
        "price": {
          "type": "number",
          "format": "double"
        },
        "productsReviews": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Review"
          }
        },
        "rating": {
          "type": "number",
          "format": "double"
        },
        "sizeType": {
          "type": "string",
          "enum": [
            "PACKS",
            "KILOS"
          ]
        },
        "sizes": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "views": {
          "$ref": "#/definitions/Views"
        }
      },
      "title": "Product"
    },
    "ProductForOrderContentDTO": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "integer",
          "format": "int64",
          "description": "Product id"
        },
        "quantity": {
          "type": "integer",
          "format": "int32",
          "description": "Product quantity"
        },
        "size": {
          "type": "integer",
          "format": "int32",
          "description": "Quantity size"
        }
      },
      "title": "ProductForOrderContentDTO"
    },
    "ProductNoDescDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 1,
          "description": "Product's unique id"
        },
        "image": {
          "type": "string",
          "example": "https://www.mantralabsglobal.com/404",
          "description": "Url to an image"
        },
        "name": {
          "type": "string",
          "example": "Eggs",
          "description": "Product's name"
        },
        "price": {
          "type": "number",
          "format": "double",
          "example": 200.0,
          "description": "Product's price"
        },
        "rating": {
          "type": "number",
          "format": "double",
          "example": 4.5,
          "description": "Product's rating"
        },
        "sizeType": {
          "type": "string",
          "example": "PACKS",
          "description": "Product type",
          "enum": [
            "PACKS",
            "KILOS"
          ]
        },
        "sizes": {
          "type": "array",
          "example": [
            1,
            3,
            5
          ],
          "description": "A list of available sizes for each product",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "title": "ProductNoDescDTO"
    },
    "ProductWithDescDTO": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "example": "This organic mamaliga is exceptional! Try it today, so you won't regret tomorrow!",
          "description": "Description of the product"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 1,
          "description": "Product's unique id"
        },
        "image": {
          "type": "string",
          "example": "https://www.mantralabsglobal.com/404",
          "description": "Url to an image"
        },
        "name": {
          "type": "string",
          "example": "Eggs",
          "description": "Product's name"
        },
        "price": {
          "type": "number",
          "format": "double",
          "example": 200.0,
          "description": "Product's price"
        },
        "rating": {
          "type": "number",
          "format": "double",
          "example": 4.5,
          "description": "Product's rating"
        },
        "sizeType": {
          "type": "string",
          "example": "PACKS",
          "description": "Product type",
          "enum": [
            "PACKS",
            "KILOS"
          ]
        },
        "sizes": {
          "type": "array",
          "example": [
            1,
            3,
            5
          ],
          "description": "A list of available sizes for each product",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "title": "ProductWithDescDTO"
    },
    "ProductWithReviewsDTO": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "example": "This organic mamaliga is exceptional! Try it today, so you won't regret tomorrow!",
          "description": "Description of the product"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 1,
          "description": "Product's unique id"
        },
        "image": {
          "type": "string",
          "example": "https://www.mantralabsglobal.com/404",
          "description": "Url to an image"
        },
        "name": {
          "type": "string",
          "example": "Eggs",
          "description": "Product's name"
        },
        "price": {
          "type": "number",
          "format": "double",
          "example": 200.0,
          "description": "Product's price"
        },
        "rating": {
          "type": "number",
          "format": "double",
          "example": 4.5,
          "description": "Product's rating"
        },
        "reviews": {
          "type": "array",
          "example": "Review #1, Review #2",
          "description": "List of product reviews",
          "items": {
            "$ref": "#/definitions/ReviewForProductDTO"
          }
        },
        "sizeType": {
          "type": "string",
          "example": "PACKS",
          "description": "Product type",
          "enum": [
            "PACKS",
            "KILOS"
          ]
        },
        "sizes": {
          "type": "array",
          "example": [
            1,
            3,
            5
          ],
          "description": "A list of available sizes for each product",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "title": "ProductWithReviewsDTO"
    },
    "RegistrationResponseDTO": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "description": "User's email"
        },
        "token": {
          "type": "string",
          "description": "User's auth token"
        }
      },
      "title": "RegistrationResponseDTO"
    },
    "Review": {
      "type": "object",
      "properties": {
        "commentBody": {
          "type": "string"
        },
        "product": {
          "$ref": "#/definitions/Product"
        },
        "rating": {
          "type": "integer",
          "format": "int32"
        },
        "reviewId": {
          "type": "integer",
          "format": "int64"
        },
        "user": {
          "$ref": "#/definitions/User"
        }
      },
      "title": "Review"
    },
    "ReviewDTO": {
      "type": "object",
      "properties": {
        "commentBody": {
          "type": "string",
          "example": "A very good product",
          "description": "Review comment"
        },
        "product": {
          "example": "Apples",
          "description": "Product details without description",
          "$ref": "#/definitions/ProductNoDescDTO"
        },
        "rating": {
          "type": "integer",
          "format": "int32",
          "example": 3,
          "description": "Rating"
        },
        "reviewId": {
          "type": "integer",
          "format": "int64",
          "example": 1,
          "description": "Review's id"
        },
        "userEmail": {
          "type": "string",
          "example": "user@endava.com",
          "description": "User-author of the review"
        }
      },
      "title": "ReviewDTO"
    },
    "ReviewForProductDTO": {
      "type": "object",
      "properties": {
        "commentBody": {
          "type": "string",
          "example": "A very good product",
          "description": "Review comment"
        },
        "rating": {
          "type": "integer",
          "format": "int32",
          "example": 3,
          "description": "Rating"
        },
        "reviewId": {
          "type": "integer",
          "format": "int64",
          "example": 1,
          "description": "Review's id"
        },
        "userEmail": {
          "type": "string",
          "example": "user@endava.com",
          "description": "User-author of the review"
        }
      },
      "title": "ReviewForProductDTO"
    },
    "Sort": {
      "type": "object",
      "properties": {
        "empty": {
          "type": "boolean"
        },
        "sorted": {
          "type": "boolean"
        },
        "unsorted": {
          "type": "boolean"
        }
      },
      "title": "Sort"
    },
    "User": {
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/Address"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "role": {
          "type": "string",
          "enum": [
            "USER",
            "ADMIN"
          ]
        },
        "status": {
          "type": "string",
          "enum": [
            "ACTIVE",
            "BANNED"
          ]
        }
      },
      "title": "User"
    },
    "UserInformationDto": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "role": {
          "type": "string",
          "enum": [
            "USER",
            "ADMIN"
          ]
        },
        "status": {
          "type": "string",
          "enum": [
            "ACTIVE",
            "BANNED"
          ]
        }
      },
      "title": "UserInformationDto"
    },
    "UserRequestDTO": {
      "type": "object",
      "properties": {
        "cartItems": {
          "type": "array",
          "description": "User's cart",
          "items": {
            "$ref": "#/definitions/ItemRequestDTO"
          }
        },
        "email": {
          "type": "string",
          "example": "jorikbarba@gmail.com",
          "description": "User's email"
        },
        "password": {
          "type": "string",
          "description": "User's password"
        }
      },
      "title": "UserRequestDTO"
    },
    "Views": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "number": {
          "type": "integer",
          "format": "int64"
        },
        "product": {
          "$ref": "#/definitions/Product"
        }
      },
      "title": "Views"
    }
  }
}