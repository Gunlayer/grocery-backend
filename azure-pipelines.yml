
variables:
- group: grocery-list
- name: BuildParameters.dockerFile
  value: '**/Dockerfile'
# - name: vmImageName
#   value: ubuntu-18.04
- name: isDevelop
  value: $[eq(variables['Build.SourceBranch'], 'refs/heads/develop')]
- name: isRelease
  value: $[eq(variables['Build.SourceBranch'], 'refs/heads/releases/*')]
- name: isDevOps
  value: $[eq(variables['Build.SourceBranch'], 'refs/heads/xxx')]

resources:
  pipelines:
  - pipeline: grocery-shop-service
    source: grocery-shop-service
    trigger:
      branches:
        include:
        - develop
        - releases/*

name: $(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)

stages:

- stage: Utests_N_Build
  condition: and(eq(variables.isDevelop, 'false'), eq(variables.isRelease, 'false'))
  displayName: 'Run unite tests, code scan and build image'

  jobs:
  - job: Build
    displayName: Utests_N_Build job
    pool: Default
      # vmImage: $(vmImageName)
    steps:
    - checkout: self

    - task: Docker@0
      displayName: Build an image
      inputs:
        dockerFile: $(BuildParameters.dockerFile)
        buildArguments: SONAR_TOKEN=$(SONAR_TOKEN)
        additionalImageTags: $(Build.BuildId)
        includeLatestTag: true

- stage: Build_N_Push
  condition: eq(variables.isDevelop, 'true')
  displayName: 'Run build and push image to ACR'

  jobs:
  - job: Build
    displayName: Build_N_Push job
    pool: Default
      # vmImage: $(vmImageName)
    steps:
    - checkout: self

    - task: Docker@0
      displayName: Build an image
      inputs:
        azureSubscriptionEndpoint: 38386be4-ac4e-425b-8cd7-0127b8f9c0d9
        azureContainerRegistry: '{"loginServer":"mddinternship2021h2project.azurecr.io", "id" : "/subscriptions/01145a00-1779-4383-8b3a-08a39e3816fe/resourceGroups/Internship/providers/Microsoft.ContainerRegistry/registries/mddinternship2021h2project"}'
        dockerFile: $(BuildParameters.dockerFile)
        buildArguments: SONAR_TOKEN=$(SONAR_TOKEN)
        imageName: grocery-shop-service
        additionalImageTags: $(Build.BuildId)
        includeLatestTag: true

    - task: Docker@0
      displayName: Push an image
      inputs:
        azureSubscriptionEndpoint: 38386be4-ac4e-425b-8cd7-0127b8f9c0d9
        azureContainerRegistry: '{"loginServer":"mddinternship2021h2project.azurecr.io", "id" : "/subscriptions/01145a00-1779-4383-8b3a-08a39e3816fe/resourceGroups/Internship/providers/Microsoft.ContainerRegistry/registries/mddinternship2021h2project"}'
        action: Push an image
        imageName: grocery-shop-service
        additionalImageTags: $(Build.BuildId)
        includeLatestTag: true

- stage: Deploy2dev
  dependsOn: Build_N_Push
  condition: and(succeeded(), eq(variables.isDevelop, 'true'))
  displayName: Deploy to AKS dev

  jobs:
    - job: Deploy
      displayName: Deploy to dev-AKS job
      pool: Default
        # vmImage: $(vmImageName)
      
      steps:
      - checkout: self
      - task: KubernetesManifest@0
        displayName: deploy
        inputs:
          action: 'deploy'
          kubernetesServiceConnection: 'grocery-list-dev-sc'
          namespace: 'grocery-list-dev'
          manifests: manifests/dev-deployment.yml

- stage: Deploy2demo
  dependsOn: Build_N_Push
  condition: eq(variables.isRelease, 'true')
  displayName: Deploy to AKS demo

  jobs:
    - job: Deploy
      displayName: Deploy to demo-AKS job
      pool: Default
        # vmImage: $(vmImageName)
      
      steps:
      - checkout: self
      - task: KubernetesManifest@0
        displayName: deploy
        inputs:
          action: 'deploy'
          kubernetesServiceConnection: 'grocery-list-demo-sc'
          namespace: 'grocery-list-demo'
          manifests: manifests/demo-deployment.yml